>>>Using Git:
git pull
(play around with code)
git add
git commit
git push
(git status) to check what's going on
(on qt nuuc) copy/replace updated file in catkin_ws/src to run

>>>Using Catkin WS:
cd into catkin_ws/src
create a package: catkin_create_pkg pkgname (lowercase # _)
cd into pkgname
mkdir scripts
cd into scripts
put all the python/code files in scripts
(in the ~/.bashrc file add lines at the end:
source /opt/ros/kinetic/setup.bash
source ~/catkin_ws/devel/setup.sh
then in catkin_ws/devel run source ~/.bashrc)
cd out to catkin_ws
catkin_make
(roscd pkgname) to see if pkgname is in catkin ws
(first time - cd into pkgname/scripts, run: chmod +x script.py)
rosrun pkgname script.py

>>>QT Stuff:
there is a gesture game app @ ~/robot/code/qt_apps/qt_gesturegame_app/src/qt_gesturegame_app.cpp
in catkin_ws: rosnode list to see node names
when writing scripts use unique node names to avoid overwriting qt gui

>>>ROS:
in order to play with roscore, new commands need to be run in an new terminal window while roscore is still open in its window

>>>Arduino
install rosserial libraries (search on library manager) + restart to see rosserial examples
or use https://github.com/ros-drivers/rosserial
if errors with port try running these commands from root:
ls -l /dev/ttyACM*
sudo chmod a+rw /dev/ttyACM# (as listed)



